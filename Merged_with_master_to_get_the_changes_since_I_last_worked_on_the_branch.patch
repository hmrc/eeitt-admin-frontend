Index: app/uk/gov/hmrc/eeittadminfrontend/connectors/EeittConnector.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/connectors/EeittConnector.scala	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/connectors/EeittConnector.scala	(revision )
@@ -17,6 +17,7 @@
 package uk.gov.hmrc.eeittadminfrontend.connectors
 
 import play.api.Logger
+import play.api.libs.json.Format
 import play.api.mvc.Request
 import uk.gov.hmrc.eeittadminfrontend.WSHttp
 import uk.gov.hmrc.eeittadminfrontend.models._
@@ -30,13 +31,59 @@
   val httpGet : HttpGet = WSHttp
   val httpPost : HttpPost = WSHttp
 
-  val eeittAdminUrl : String = "http://localhost:9191/eeitt"
+  val eeittUrl : String = baseUrl("eeitt")+"/eeitt"
 
   def apply(a : A)(implicit hc : HeaderCarrier, ec: ExecutionContext, request : Request[Map[String, Seq[String]]]) : Future[List[Response]]
 }
 
 object EeittConnector {
 
+  private def postEEITTConnector[A<:Deltas: Format]() : EeittConnector[A] = new EeittConnector[A] {
+    override def apply(a: A)(implicit hc : HeaderCarrier, ec: ExecutionContext, request : Request[Map[String, Seq[String]]]) = {
+      if(isLive(request)) {
+        httpPost.POSTString[DeltaResponse](eeittUrl + "/etmp-data/live/" + a.url, a.value).map(List(_))
+      } else
+      {
+        httpPost.POSTString[DeltaResponse](eeittUrl + "/etmp-data/dry-run/" + a.url, a.value).map(List(_))
+
+      }
+    }
+  }
+
+  private def isLive(implicit request: Request[Map[String, Seq[String]]]) : Boolean = {
+    val isLive = request.body.getOrElse("isLive", Seq("DRY-RUN"))
+    Logger.debug(isLive.toString)
+    isLive.contains("LIVE")
+  }
+
+  implicit def agentConnector : EeittConnector[DeltaAgent] = {
+    postEEITTConnector[DeltaAgent]()
+  }
+
+  implicit def businessConnector : EeittConnector[DeltaBusiness] = {
+    postEEITTConnector[DeltaBusiness]()
+  }
+
+  implicit def arnConnector : EeittConnector[Arn] = {
+    Logger.info("ARN")
+    getEeittConnector[Arn](_.database.agent.get)
+  }
+
+  implicit def regConnector: EeittConnector[RegistrationNumber] = {
+    Logger.info("REG SEARCH")
+    getEeittConnector[RegistrationNumber](_.database.reg.get)
+  }
+
+  implicit def groupIdConnector: EeittConnector[GroupId] = {
+    Logger.info("GROUP")
+    getEeittConnector[GroupId](_.userType.url)
+  }
+
+  implicit def regimeConnector: EeittConnector[Regime] = {
+    Logger.info("REGIME")
+    getEeittConnector[Regime](_.database.regime.get) // Business Only
+  }
+
   private def getEeittConnector[A](getPath : A => String): EeittConnector[A] = {
     new EeittConnector[A] {
 
@@ -44,12 +91,12 @@
         def call[B](a : String, b : B): Future[List[Response]] = {
           b match {
             case ETMP =>
-              httpGet.GET[Either[List[ETMPResponseBusiness], List[ETMPResponseAgent]]](eeittAdminUrl + getPath(value) + a).map{
+              httpGet.GET[Either[List[ETMPBusiness], List[ETMPAgent]]](eeittUrl + getPath(value) + a).map{
                 case Left(x) => x
                 case Right(y) => y
               }
             case x =>
-              httpGet.GET[List[EnrollmentResponse]](eeittAdminUrl + getPath(value) + a)
+              httpGet.GET[List[EnrollmentResponse]](eeittUrl + getPath(value) + a)
           }
         }
 
@@ -74,25 +121,6 @@
     }
   }
 
-  implicit def arnConnector : EeittConnector[Arn] = {
-    Logger.info("ARN")
-    getEeittConnector[Arn](_.database.agent.get)
-  }
-
-  implicit def regConnector: EeittConnector[RegistrationNumber] = {
-    Logger.info("REG SEARCH")
-    getEeittConnector[RegistrationNumber](_.database.reg.get)
-  }
-
-  implicit def groupIdConnector: EeittConnector[GroupId] = {
-    Logger.info("GROUP")
-    getEeittConnector[GroupId](_.userType.url)
-  }
-
-  implicit def regimeConnector: EeittConnector[Regime] = {
-    Logger.info("REGIME")
-    getEeittConnector[Regime](_.database.regime.get) // Business Only
-  }
 }
 
 
Index: conf/app.routes
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- conf/app.routes	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ conf/app.routes	(revision )
@@ -10,12 +10,22 @@
 GET        /delta                    uk.gov.hmrc.eeittadminfrontend.controllers.QueryController.goToDelta
 GET        /query                    uk.gov.hmrc.eeittadminfrontend.controllers.QueryController.goToQuery
 GET        /get-gform                uk.gov.hmrc.eeittadminfrontend.controllers.GformsController.gformPage
+
+GET        /logout                   uk.gov.hmrc.eeittadminfrontend.controllers.AuthController.signOut
+
+GET        /delta                    uk.gov.hmrc.eeittadminfrontend.controllers.QueryController.goToDelta
+GET        /query                    uk.gov.hmrc.eeittadminfrontend.controllers.QueryController.goToQuery
+GET        /gg-bulk                  uk.gov.hmrc.eeittadminfrontend.controllers.BulkGGLoad.getBulkloadPage
 POST       /query/arn                uk.gov.hmrc.eeittadminfrontend.controllers.QueryController.UidQuery
 POST       /query/groupid            uk.gov.hmrc.eeittadminfrontend.controllers.QueryController.enrollmentQuery
 
-GET        /logout                   uk.gov.hmrc.eeittadminfrontend.controllers.AuthController.signOut
+POST       /bulk/gg/load/knownfacts  uk.gov.hmrc.eeittadminfrontend.controllers.BulkGGLoad.loadKF
+POST       /bulk/gg/load/assign-enrolment   uk.gov.hmrc.eeittadminfrontend.controllers.BulkGGLoad.assignEnrollment
 
+POST       /delta/agent              uk.gov.hmrc.eeittadminfrontend.controllers.DeltaController.agent
+POST       /delta/business           uk.gov.hmrc.eeittadminfrontend.controllers.DeltaController.business
 
+POST       /bulk/gg/load/delete      uk.gov.hmrc.eeittadminfrontend.controllers.BulkGGLoad.deleteEndPoint
 GET        /dashboard                uk.gov.hmrc.eeittadminfrontend.controllers.EeittAdminController.index
 
 GET        /assets/*file            controllers.Assets.at(path = "/public", file)
\ No newline at end of file
Index: app/uk/gov/hmrc/eeittadminfrontend/services/AuthService.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/services/AuthService.scala	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/services/AuthService.scala	(revision )
@@ -18,6 +18,7 @@
 
 import cats.data._
 import cats.syntax.all._
+import play.api.{Configuration, Logger}
 import play.api.Configuration
 import pureconfig.loadConfigOrThrow
 import uk.gov.hmrc.eeittadminfrontend.models.{Email, LoginError}
Index: app/uk/gov/hmrc/eeittadminfrontend/models/UserType.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/models/UserType.scala	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/models/UserType.scala	(revision )
@@ -29,7 +29,7 @@
     "Enrollment Agent "
   }
 
-  override val url: String = "/agent-by-gid/"
+  override val url: String = "/agent/group-id/"
 }
 object Business extends UserType {
 
@@ -37,7 +37,7 @@
     "Enrollment Business "
   }
 
-  override val url: String = "/business-by-gid/"
+  override val url: String = "/business/group-id/"
 }
 
 object UserType {
Index: app/uk/gov/hmrc/eeittadminfrontend/views/select_wht_to_do.scala.html
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/views/select_wht_to_do.scala.html	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/views/select_what_to_do.scala.html	(revision )
@@ -1,0 +1,0 @@
Index: app/uk/gov/hmrc/eeittadminfrontend/connectors/EMACConnector.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/connectors/EMACConnector.scala	(revision )
+++ app/uk/gov/hmrc/eeittadminfrontend/connectors/EMACConnector.scala	(revision )
@@ -0,0 +1,169 @@
+/*
+ * Copyright 2017 HM Revenue & Customs
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package uk.gov.hmrc.eeittadminfrontend.connectors
+
+import play.api.Logger
+import play.api.libs.json.{JsString, JsValue, Json, OFormat}
+import play.api.libs.ws.WSRequest
+import play.api.mvc.Request
+import uk.gov.hmrc.eeittadminfrontend.WSHttp
+import uk.gov.hmrc.eeittadminfrontend.controllers.User
+import uk.gov.hmrc.play.http._
+
+import scala.concurrent.{ExecutionContext, Future}
+
+class EMACConnector extends EMACConnectorHelper
+
+case class KeyValuePair(key: String, value: String)
+
+object KeyValuePair {
+
+  implicit val format = Json.format[KeyValuePair]
+}
+case class Delete(user: String, enrollmentKey: EnrollmentKey)
+case class EnrollmentKey(service : String, identifier: String, value: String)
+case class KnownFacts(enrollmentKey: EnrollmentKey, verifiers: List[KeyValuePair])
+case class Enrollment(user: String, enrollmentKey: EnrollmentKey, verifiers: List[KeyValuePair], friendlyName: String)
+
+trait EMACConnectorHelper {
+
+  val PUT : HttpPut = WSHttp
+  val POST : HttpPost = WSHttp
+  val DELETE : HttpDelete = WSHttp
+
+  val ES6url = "http://enrolment-store-proxy.protected.mdtp:80/enrolment-store-proxy/enrolment-store/enrolments/"
+  val ES8url = "http://enrolment-store-proxy.protected.mdtp:80/enrolment-store-proxy/enrolment-store/groups/"
+  val ES11url = "http://enrolment-store-proxy.protected.mdtp:80/enrolment-store-proxy/enrolment-store/users/"
+
+  def getJson(list: List[KeyValuePair]): JsValue = {
+    if (list.size == 3) {
+      Json.parse(
+        s"""{
+         |"verifiers" : [
+         |{
+         |"key" : "${list.head.key}",
+         | "value" : "${list.head.value}"
+         | },
+         |{
+         |"key" : "${list(1).key}",
+         |"value" : "${list(1).value}"
+         |},
+         |{"key" : "${list(2).key}",
+         | "value": "${list(2).value}"
+         | }
+         |]
+         |}""".stripMargin
+    )
+  } else if(list.size == 2){
+      Json.parse(
+        s"""{
+           |"verifiers" : [
+           |{"key" : "${list.head.key}",
+           | "value" : "${list.head.value}"},
+           |{
+           |"key" : "${list(1).key}",
+           | "value" : "${list(1).value}"
+           | }
+           |]
+           |}""".stripMargin
+      )
+    } else {
+      Json.parse(
+        s"""{
+           |"verifiers" : [
+           |{
+           |"key" : "${list.head.key}",
+           | "value" : "${list.head.value}"
+           | }
+           |]
+           |}""".stripMargin
+      )
+    }
+    }
+
+  //ES6
+  def loadKF(knownFacts: KnownFacts)(implicit hc: HeaderCarrier, ec: ExecutionContext): Future[Option[JsValue]] = {
+
+    val json = getJson(knownFacts.verifiers)
+
+    PUT.PUT[JsValue, HttpResponse](s"$ES6url${knownFacts.enrollmentKey.service}~${knownFacts.enrollmentKey.identifier}~${knownFacts.enrollmentKey.value}", json).map(result).flatMap{
+      case None => Future.successful(None)
+      case x =>
+        Logger.error("Loading of known facts has failed")
+        Future.successful(x)
+    }
+  }
+
+  //ES8
+  def allocateAnEnrollment(enrollment: Enrollment, user: User)(implicit hc: HeaderCarrier, ec: ExecutionContext): Future[HttpResponse] = {
+    val allocateInsertJson: JsValue =
+      Json.parse(s"""
+         |{
+         |    "friendlyName": "${enrollment.friendlyName}",
+         |    "type": "principal",
+         |    ${getJson(enrollment.verifiers).toString.drop(1).dropRight(1)}
+         |}
+      """.stripMargin)
+
+    POST.POST[JsValue, HttpResponse](s"$ES8url${user.groupId}/enrolments/${enrollment.enrollmentKey.service}~${enrollment.enrollmentKey.identifier}~${enrollment.enrollmentKey.value}?legacy-credentialId=${user.credId}", allocateInsertJson, Seq("Content-Type" -> "application/json"))
+  }
+
+  //ES11
+  def assignEnrollment(enrollment: Enrollment, user: User)(implicit hc: HeaderCarrier, ec: ExecutionContext): Future[Option[JsValue]] = {
+    allocateAnEnrollment(enrollment, user).map(result).flatMap {
+      case None => {
+        deassignEnrollment(enrollment.enrollmentKey, user).flatMap { y =>
+          POST.POSTEmpty[HttpResponse](s"$ES11url${user.credId}/enrolments/${enrollment.enrollmentKey.service}~${enrollment.enrollmentKey.identifier}~${enrollment.enrollmentKey.value}").map(result).map {
+            case None => None
+            case x =>
+              Logger.error("Emac Connector returned an error for assign Enrollment")
+              x
+          }
+        }
+      }
+      case err =>
+        Logger.error("EMAC Connector returned an error.")
+        Future.successful(err)
+    }
+  }
+
+  def result(response: HttpResponse): Option[JsValue] = {
+    response.status match {
+      case 204 =>
+        None
+      case 201 =>
+        None
+      case _ =>
+        Some(Json.parse(response.body))
+    }
+  }
+
+  //ES7
+  def removeUnallocated(enrollment: EnrollmentKey)(implicit hc: HeaderCarrier, ec: ExecutionContext): Future[Option[JsValue]] = {
+    DELETE.DELETE[HttpResponse](s"$ES6url${enrollment.service}~${enrollment.identifier}~${enrollment.value}").map(result)
+  }
+
+  //ES9
+  def deallocateEnrollment(enrollment: EnrollmentKey, user: User)(implicit hc: HeaderCarrier, ec: ExecutionContext): Future[Option[JsValue]] = {
+    DELETE.DELETE[HttpResponse](s"$ES8url${user.groupId}/enrolments/${enrollment.service}~${enrollment.identifier}~${enrollment.value}").map(result)
+  }
+
+  //ES12
+  def deassignEnrollment(enrollment: EnrollmentKey, user: User)(implicit hc: HeaderCarrier, ec: ExecutionContext): Future[Option[JsValue]] = {
+    DELETE.DELETE[HttpResponse](s"$ES11url${user.credId}/enrolments/${enrollment.service}~${enrollment.identifier}~${enrollment.value}").map(result)
+  }
+}
\ No newline at end of file
Index: app/uk/gov/hmrc/eeittadminfrontend/views/delta.scala.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/views/delta.scala.html	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/views/delta.scala.html	(revision )
@@ -22,40 +22,61 @@
 
 @uk.gov.hmrc.eeittadminfrontend.views.html.main_template(title = "Query"){
 
+<script>
+function colorFunction(value){
+  var str = "isLive";
+  var color = document.getElementById(str.concat(value));
+
+    console.log = color.options[color.selectedIndex].value
+  if(color.options[color.selectedIndex].value == "LIVE"){
+    document.getElementById(value).style.backgroundColor = "#ff0000";
+  } else {
+    document.getElementById(value).style.backgroundColor = "#fff";
+  }
+}
+</script>
+
+
 
 <div class="text-center">
-    <div class="col-md-4 col-md-offset-2">
+    <div class="col-md-4 col-md-offset-2 red">
+        <div id="Agent" style="float:left; width:50%">
         <h3>Agent Delta</h3>
         <div class="form-group">
-            <form>
+            <form action="@uk.gov.hmrc.eeittadminfrontend.controllers.routes.DeltaController.agent" method="POST">
+                <select id="isLiveAgent" name="isLive" onchange='colorFunction("Agent")' >
+                    <option value="DRY-RUN">DRY-RUN</option>
+                    <option value="LIVE">LIVE</option>
+                </select>
                 <fieldset class="form-field-group">
             <label for="agent">Please enter the agent delta:</label>
-            <textarea class="form-control" rows="5" id="agent"></textarea>
+            <textarea class="form-control" rows="5" id="AgentArea" name="value"></textarea>
                     <input type="submit" class="button" value="Submit"/>
                 </fieldset>
+
+                @CSRF.formField
             </form>
+            </div>
         </div>
     </div>
     <div class="col-md-4">
+        <div id="Business" style="float: right; width: 50%">
         <h3>Business Users</h3>
         <div class="form-group">
-            <form>
+            <form action="@uk.gov.hmrc.eeittadminfrontend.controllers.routes.DeltaController.business" method="POST" >
+                <select id="isLiveBusiness" name="isLive" onchange='colorFunction("Business")'>
+                    <option value="DRY-RUN">DRY-RUN</option>
+                    <option value="LIVE">LIVE</option>
+                </select>
             <fieldset class="form-field-group">
             <label for="BusinessUser">Please enter the business user delta:</label>
-            <textarea class="form-control" rows="5" id="BusinessUser"></textarea>
+            <textarea class="form-control" rows="5" id="BusinessUser" name="value"></textarea>
                 <input type="submit" class="button" value="Submit"/>
             </fieldset>
+                @CSRF.formField
             </form>
+            </div>
         </div>
     </div>
 </div>
-
-
-
-
-
-
-
-
-
 }
\ No newline at end of file
Index: app/uk/gov/hmrc/eeittadminfrontend/models/Database.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/models/Database.scala	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/models/Database.scala	(revision )
@@ -30,16 +30,16 @@
 object ETMP extends Database {
 
   override def toString: String = "ETMP"
-  override val reg = Some("/get-business-users/")
-  override val agent = Some("/get-agents/")
+  override val reg = Some("/business-users/")
+  override val agent = Some("/agents/")
 }
 
 object Enrollments extends Database {
 
   override def toString: String = "Enrollments"
-  override val reg = Some("/business-enrollment-by-reg/")
-  override val agent = Some("/agent-enrollment-by-reg/")
-  override val regime = Some("/business-user-by-regime/")
+  override val reg = Some("/business-enrollment/registration-number/")
+  override val agent = Some("/agent-enrollment/arn/")
+  override val regime = Some("/business-user/regime/")
 
 }
 
Index: app/uk/gov/hmrc/eeittadminfrontend/controllers/BulkGGLoad.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/controllers/BulkGGLoad.scala	(revision )
+++ app/uk/gov/hmrc/eeittadminfrontend/controllers/BulkGGLoad.scala	(revision )
@@ -0,0 +1,173 @@
+/*
+ * Copyright 2017 HM Revenue & Customs
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package uk.gov.hmrc.eeittadminfrontend.controllers
+
+import play.api.Logger
+import play.api.data.Form
+import play.api.data.Forms._
+import play.api.i18n.{I18nSupport, MessagesApi}
+import play.api.libs.json.Json
+import play.api.mvc.{Action, AnyContent}
+import uk.gov.hmrc.eeittadminfrontend.AppConfig
+import uk.gov.hmrc.eeittadminfrontend.config.Authentication
+import uk.gov.hmrc.eeittadminfrontend.connectors._
+import uk.gov.hmrc.play.frontend.auth.Actions
+import uk.gov.hmrc.play.frontend.auth.connectors.AuthConnector
+import uk.gov.hmrc.play.frontend.controller.FrontendController
+import uk.gov.hmrc.play.http.HeaderCarrier
+
+import scala.concurrent.Future
+
+case class Switch(value: Boolean)
+case class User(credId: String, userId: String, groupId: String)
+
+class BulkGGLoad(val authConnector: AuthConnector, eMACConnector: EMACConnector)(implicit val messagesApi: MessagesApi, appConfig: AppConfig) extends FrontendController with Actions with I18nSupport {
+
+  def getBulkloadPage = Authentication.async{ implicit request =>
+    Future.successful(Ok(uk.gov.hmrc.eeittadminfrontend.views.html.gg_bulkload(knownFactsForm, allocateEnrolment, listOfCredIds)))
+
+  }
+
+  private val switch: Boolean = pureconfig.loadConfigOrThrow[Switch]("feature.GGLoad.switch").value
+
+  val listOfCredIds: Map[String, User] = if(switch){
+    Map("USER1" -> pureconfig.loadConfigOrThrow[User]("feature.GGLoad.users.user1"), "USER2" -> pureconfig.loadConfigOrThrow[User]("feature.GGLoad.users.user2"), "USER3" -> pureconfig.loadConfigOrThrow[User]("feature.GGLoad.users.user3"))
+  } else Map.empty[String, User]
+
+  val knownFactsForm = Form(
+    mapping(
+      "enrollmentKey" -> mapping(
+        "service" -> nonEmptyText,
+        "identifier" -> nonEmptyText,
+        "value" -> nonEmptyText
+      )(EnrollmentKey.apply)(EnrollmentKey.unapply),
+        "verifiers" -> list(mapping(
+          "key" -> nonEmptyText,
+          "value" -> nonEmptyText
+        )(KeyValuePair.apply)(KeyValuePair.unapply))
+    )(KnownFacts.apply)(KnownFacts.unapply)
+  )
+
+  val allocateEnrolment = Form(
+    mapping(
+      "user" -> nonEmptyText,
+      "enrolmentKey" -> mapping(
+        "service" -> nonEmptyText,
+        "identifier" -> nonEmptyText,
+        "value" -> nonEmptyText
+      )(EnrollmentKey.apply)(EnrollmentKey.unapply),
+        "verifiers" -> list(mapping(
+          "key" -> nonEmptyText,
+          "value" -> nonEmptyText
+        )(KeyValuePair.apply)(KeyValuePair.unapply)),
+      "friendlyName" -> nonEmptyText
+    )(Enrollment.apply)(Enrollment.unapply)
+  )
+
+  val deleteForm = Form(
+    mapping(
+      "user" -> nonEmptyText,
+      "enrollmentKey" -> mapping(
+        "service" -> nonEmptyText,
+        "identifier" -> nonEmptyText,
+        "value" -> nonEmptyText
+      )(EnrollmentKey.apply)(EnrollmentKey.unapply)
+    )(Delete.apply)(Delete.unapply)
+  )
+
+  def loadKF(): Action[AnyContent] = Authentication.async { implicit request =>
+    Logger.debug("ERROR ::: " + request.body.toString)
+    if(switch) {
+      knownFactsForm.bindFromRequest.fold(
+        errors =>
+          Future.successful(BadRequest("Failed")),
+        success => {
+          Logger.debug(success.verifiers.toString+ "///////////////////////////")
+          eMACConnector.loadKF(success).map {
+            case None =>
+              Ok("Success")
+            case Some(x) =>
+              Ok("Failed" + x.toString)
+          }
+        }
+      )
+    } else Future.successful(BadRequest("Feature Invalid"))
+  }
+
+  def assignEnrollment(): Action[AnyContent] = Authentication.async { implicit request =>
+    allocateEnrolment.bindFromRequest.fold(
+      errors =>
+        Future.successful(BadRequest("Failed")),
+      success => {
+        val user = listOfCredIds(success.user)
+        eMACConnector.assignEnrollment(success, user).map{
+          case None =>
+            Ok("Successful!!!")
+          case Some(x) =>
+            Ok(x.toString)
+        }
+      }
+    )
+  }
+
+  def deleteEndPoint(): Action[AnyContent] = Authentication.async { implicit request =>
+    deleteForm.bindFromRequest.fold(
+      errors =>
+        Future.successful(BadRequest("Ok")),
+      success => {
+        val user = listOfCredIds(success.user)
+        for{
+          result <- startDelete(success.enrollmentKey, user)
+        } yield {
+          if(result) {
+            Ok("DELETED")
+          } else BadRequest("Failed Check logs")
+        }
+      }
+    )
+  }
+
+  def startDelete(enrollmentKey: EnrollmentKey, user: User)(implicit hc: HeaderCarrier): Future[Boolean] = {
+    eMACConnector.deassignEnrollment(enrollmentKey, user).flatMap {
+      case None =>
+        deallocate(enrollmentKey, user)
+      case Some(x) =>
+        Logger.error(Json.prettyPrint(x))
+        Future.successful(false)
+    }
+  }
+
+  def deallocate(enrollmentKey: EnrollmentKey, user: User)(implicit hc: HeaderCarrier): Future[Boolean] = {
+  eMACConnector.deallocateEnrollment(enrollmentKey, user).flatMap{
+    case None =>
+      removeKf(enrollmentKey)
+    case Some(x) =>
+      Logger.error(Json.prettyPrint(x))
+      Future.successful(false)
+  }
+  }
+
+  def removeKf(enrollmentKey: EnrollmentKey)(implicit hc: HeaderCarrier): Future[Boolean] = {
+    eMACConnector.removeUnallocated(enrollmentKey).map{
+      case None =>
+        true
+      case Some(x) =>
+        Logger.error(Json.prettyPrint(x))
+        false
+    }
+  }
+}
Index: app/uk/gov/hmrc/eeittadminfrontend/views/query_page.scala.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/views/query_page.scala.html	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/views/query_page.scala.html	(revision )
@@ -25,48 +25,58 @@
       integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
 <h2 class="text-center">Query</h2>
 <div class="text-center">
-<div class="col-md-4 col-md-offset-2">
-    <h3>ETMP</h3>
-    <form   action=@uk.gov.hmrc.eeittadminfrontend.controllers.routes.QueryController.UidQuery method="POST" class="js-form" autocomplete="on" novalidate="novalidate">
+    <div class="col-md-4 col-md-offset-2">
+        <h3>ETMP</h3>
+        <div class="form-group">
+        <form action=@uk.gov.hmrc.eeittadminfrontend.controllers.routes.QueryController.UidQuery method="POST"
+              class="js-form" autocomplete="on" novalidate="novalidate">
 
-        @CSRF.formField
+            @CSRF.formField
 
-        <select  id="database_arn" class="drop-down" name="UserDB" onchange="return changeId(); ">
-            <option value="ARN"> ARN </option>
-            <option value="Business Users"> Business Registration </option>
-        </select>
+            <select id="database_arn" class="drop-down" name="UserDB" onclick="return changeId(); ">
+                <option value="ARN"> ARN</option>
+                <option value="Business Users"> Business Registration</option>
+
+            </select>
 
-        <fieldset class="form-field-group">
-                <input
-                        type="text"
-                        name="arn"
-                        id="arn"
-                        value=""
-                        class="form-control form-control--block"
-                />
-            </label>
-        </fieldset>
-        <input name="database" class="hidden" value="ETMP">
-        <input type="submit" class="button" value="search"/>
-    </form>
-
-</div>
+            <select id="database" class="drop-down" name="database">
+                <option value="Enrollments"> Enrollments</option>
+                <option value="ETMP"> ETMP</option>
+
+                <fieldset class="form-field-group">
+                    <input
+                            type="text"
+                            name="arn"
+                            id="arn"
+                            value=""
+                            class="form-control form-control--block"
+                    />
+                    </label>
+                </fieldset>
+            </select>
+            <input type="submit" class="button" value="search"/>
+        </form>
+        </div>
+    </div>
 
 
-    <div class="col-md-4 col-md-offset-8">
-<h3>Enrollments</h3>
-        <form action=@uk.gov.hmrc.eeittadminfrontend.controllers.routes.QueryController.enrollmentQuery method="POST" class="js-form" autocomplete="on" novalidate="novalidate">
+
+    <div class="col-md-4 ">
+        <h3>Enrollments</h3>
+        <div class="form-group">
+        <form action=@uk.gov.hmrc.eeittadminfrontend.controllers.routes.QueryController.enrollmentQuery method="POST"
+              class="js-form" autocomplete="on" novalidate="novalidate">
 
             @CSRF.formField
 
             <select id="user" class="drop-down" name="user">
-                <option value="Agent"> Agent </option>
-                <option value="Business"> Business </option>
+                <option value="Agent"> Agent</option>
+                <option value="Business"> Business</option>
             </select>
 
-            <select id="criteria" class="drop-down" name="selectsomething" onchange="return changeName();">
+            <select id="criteria" class="drop-down" name="selectsomething" onclick="return changeName();">
                 <option value="groupid"> Group ID</option>
-                <option value="regime"> Regime </option>
+                <option value="regime"> Regime</option>
             </select>
 
             <fieldset class="form-field-group">
@@ -85,6 +95,8 @@
         </form>
     </div>
 </div>
+</div>
+
 }
 <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
         integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
@@ -104,6 +116,7 @@
   y.name = "registration";
 }
 }
+
 </script>
 <script>
 function changeName(){
Index: app/uk/gov/hmrc/eeittadminfrontend/views/login_page.scala.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/views/login_page.scala.html	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/views/login_page.scala.html	(revision )
@@ -30,7 +30,7 @@
 <div class="g-signin2" data-onsuccess="onSignIn" ></div>
 
 
-<a href="#" onclick="signOut();">Sign out</a>
+<a href="@uk.gov.hmrc.eeittadminfrontend.controllers.routes.AuthController.signOut" onclick="signOut();">Sign out</a>
 
 @form(uk.gov.hmrc.eeittadminfrontend.controllers.routes.AuthController.checkCredentials, 'name -> "LoginForm"){
     @loginForm.globalError.map { error =>
Index: conf/application-json-logger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- conf/application-json-logger.xml	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ conf/application-json-logger.xml	(revision )
@@ -5,9 +5,9 @@
         <encoder class="uk.gov.hmrc.play.logging.JsonEncoder"/>
     </appender>
 
-    <logger name="uk.gov" level="WARN"/>
+    <logger name="uk.gov" level="${logger.application:-WARN}"/>
 
-    <root level="WARN">
+    <root level="${logger.application:-WARN}">
         <appender-ref ref="STDOUT"/>
     </root>
 </configuration>
Index: app/uk/gov/hmrc/eeittadminfrontend/views/main_template.scala.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/views/main_template.scala.html	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/views/main_template.scala.html	(revision )
@@ -26,8 +26,6 @@
 @import uk.gov.hmrc.play.views.html.layouts
 <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
 
-
-
 <nav role="navigation" class="navbar navbar-default navbar-fixed-top">
     <div class="container-fluid" >
         <!-- Brand and toggle get grouped for better mobile display -->
@@ -47,8 +45,10 @@
                 <li><a href="@uk.gov.hmrc.eeittadminfrontend.controllers.routes.QueryController.goToDelta">Update Delta</a></li>
                 <li><a href="@uk.gov.hmrc.eeittadminfrontend.controllers.routes.GformsController.gformPage">G-forms</a></li>
                 <li><a href="#">Maintenance Scripts</a></li>
+                @sidebar
             </ul>
             <ul class="nav navbar-nav navbar-right">
+            </ul>
         </div>
 
     </div>
@@ -65,7 +65,8 @@
 @serviceInfoContent = {}
 
 @sidebar = {
-    @if(sidebarLinks.isDefined) {
-        @layouts.sidebar(sidebarLinks.get, Some("sidebar"))
+
+    @if(pureconfig.loadConfigOrThrow[uk.gov.hmrc.eeittadminfrontend.controllers.Switch]("feature.GGLoad.switch").value) {
+<li><a href="@uk.gov.hmrc.eeittadminfrontend.controllers.routes.BulkGGLoad.getBulkloadPage">Bulk Load GG</a></li>
     }
 }
Index: app/uk/gov/hmrc/eeittadminfrontend/views/test_page.scala.html
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/views/test_page.scala.html	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/views/test_page.scala.html	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
@@ -1,36 +0,0 @@
-@*
- * Copyright 2017 HM Revenue & Customs
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *@
-
-<html>
-<head>
-    <title>Directory API Quickstart</title>
-    <meta charset='utf-8' />
-</head>
-<body>
-<p>Directory API Quickstart</p>
-
-<!--Add buttons to initiate auth sequence and sign out-->
-<button id="authorize-button" style="display: none;">Authorize</button>
-<button id="signout-button" style="display: none;">Sign Out</button>
-
-<pre id="content"></pre>
-
-<script async defer src="https://apis.google.com/js/api.js"
-        onload="this.onload=function(){};handleClientLoad()"
-        onreadystatechange="if (this.readyState === 'complete') this.onload()">
-</script>
-</body>
-</html>
\ No newline at end of file
Index: app/uk/gov/hmrc/eeittadminfrontend/controllers/DeltaController.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/controllers/DeltaController.scala	(revision )
+++ app/uk/gov/hmrc/eeittadminfrontend/controllers/DeltaController.scala	(revision )
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2017 HM Revenue & Customs
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package uk.gov.hmrc.eeittadminfrontend.controllers
+
+import play.api.Logger
+import play.api.i18n.{I18nSupport, MessagesApi}
+import play.api.libs.json._
+import play.api.mvc.Action
+import uk.gov.hmrc.eeittadminfrontend.AppConfig
+import uk.gov.hmrc.eeittadminfrontend.config.Authentication
+import uk.gov.hmrc.eeittadminfrontend.connectors.EeittConnector
+import uk.gov.hmrc.eeittadminfrontend.models.{DeltaAgent, DeltaBusiness, ETMPAgent, ETMPBusiness}
+import uk.gov.hmrc.play.frontend.auth.Actions
+import uk.gov.hmrc.play.frontend.auth.connectors.AuthConnector
+import uk.gov.hmrc.play.frontend.controller.FrontendController
+
+import scala.concurrent.Future
+
+class DeltaController(val authConnector: AuthConnector)(implicit appConfig : AppConfig, val messagesApi: MessagesApi) extends FrontendController with Actions with I18nSupport {
+
+  def getDeltaPage() = Authentication.async { implicit request =>
+    Future.successful(Ok(uk.gov.hmrc.eeittadminfrontend.views.html.delta()))
+  }
+
+  def agent() = {
+    delta[DeltaAgent]
+  }
+
+  def business() = {
+    delta[DeltaBusiness]
+  }
+
+  private def delta[A: Format](implicit eeittConnector: EeittConnector[A]) = Authentication.async(parse.urlFormEncoded) { implicit request =>
+    Logger.info(Json.prettyPrint(Json.toJson(request.body.map(x => x._1 -> x._2.mkString))))
+    Json.toJson(request.body.map(x => x._1 -> x._2.mkString)).validate match {
+        case JsSuccess(x, _) =>
+          eeittConnector(x).map{ y =>
+            Ok(y.toString)
+          }
+        case JsError(err) =>
+          Future.successful(BadRequest(err.toString))
+      }
+  }
+
+}
Index: app/uk/gov/hmrc/eeittadminfrontend/models/EnrollmentResponse.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/models/EnrollmentResponse.scala	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/models/EnrollmentResponse.scala	(revision )
@@ -22,18 +22,26 @@
 
 trait Response
 
+case class DeltaResponse(message: String, Added: Int, changed: Int, deleted: Option[Int]) extends Response
+
+object DeltaResponse {
+
+  implicit val format: OFormat[DeltaResponse] = Json.format[DeltaResponse]
+
+}
+
 case class FailureResponse(reason:String) extends Response
 
 object EitherResponseValueClassFormat {
 
-  def format : Format[Either[List[ETMPResponseBusiness], List[ETMPResponseAgent]]] = new Format[Either[List[ETMPResponseBusiness], List[ETMPResponseAgent]]]{
+  def format : Format[Either[List[ETMPBusiness], List[ETMPAgent]]] = new Format[Either[List[ETMPBusiness], List[ETMPAgent]]]{
     override def reads(json: JsValue) = {
      println(Json.prettyPrint(json))
-      json.validate[List[ETMPResponseBusiness]] match {
+      json.validate[List[ETMPBusiness]] match {
         case JsSuccess(x, _) =>
           JsSuccess(Left(x))
         case JsError(error) =>
-          json.validate[List[ETMPResponseAgent]] match {
+          json.validate[List[ETMPAgent]] match {
             case JsSuccess(y, _) =>
               JsSuccess(Right(y))
             case JsError(err) =>
@@ -43,7 +51,7 @@
       }
     }
 
-    override def writes(o: Either[List[ETMPResponseBusiness], List[ETMPResponseAgent]]) = {
+    override def writes(o: Either[List[ETMPBusiness], List[ETMPAgent]]) = {
       o match {
         case Left(x) => Json.toJson(x)
         case Right(y) => Json.toJson(y)
@@ -57,21 +65,23 @@
   implicit val format : Format[FailureResponse] = Json.format[FailureResponse]
 }
 
-case class ETMPResponseBusiness(registrationNumber: String, postcode: Option[String], countryCode: Option[String]) extends Response
+case class ETMPBusiness(registrationNumber: String, postcode: Option[String], countryCode: Option[String]) extends Response
 
-object ETMPResponseBusiness {
+object ETMPBusiness {
 
-  implicit val format : Format[ETMPResponseBusiness] = Json.format[ETMPResponseBusiness]
+  implicit val format : Format[ETMPBusiness] = Json.format[ETMPBusiness]
 
-  implicit val eitherFormat: Format[Either[List[ETMPResponseBusiness], List[ETMPResponseAgent]]] = EitherResponseValueClassFormat.format
+  implicit val eitherFormat: Format[Either[List[ETMPBusiness], List[ETMPAgent]]] = EitherResponseValueClassFormat.format
 
 }
 
-case class ETMPResponseAgent(arn: String, postcode : String, countryCode: String, customers: Option[List[ETMPResponseBusiness]]) extends Response
+case class ETMPAgent(arn: String, postcode : String, countryCode: String, customers: Option[List[ETMPBusiness]]) extends Response
 
-object ETMPResponseAgent {
+object ETMPAgent {
 
-  implicit val format : Format[ETMPResponseAgent] = Json.format[ETMPResponseAgent]
+  implicit val format : Format[ETMPAgent] = Json.format[ETMPAgent]
+
+  val url = "agents-delta"
 
 }
 
Index: app/uk/gov/hmrc/eeittadminfrontend/config/ApplicationLoader.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/config/ApplicationLoader.scala	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/config/ApplicationLoader.scala	(revision )
@@ -33,6 +33,7 @@
 import play.filters.csrf.{CSRFComponents, CSRFFilter}
 import play.filters.headers.SecurityHeadersFilter
 import play.twirl.api.Html
+import uk.gov.hmrc.eeittadminfrontend.connectors.EMACConnector
 import uk.gov.hmrc.eeittadminfrontend.controllers.auth.SecuredActionsImpl
 import uk.gov.hmrc.eeittadminfrontend.controllers.{AuthController, EeittAdminController, GformsController, QueryController}
 import uk.gov.hmrc.eeittadminfrontend.services.{AuthService, GoogleVerifier}
@@ -49,6 +50,9 @@
 import uk.gov.hmrc.play.http.logging.filters.FrontendLoggingFilter
 
 import scala.concurrent.Future
+import uk.gov.hmrc.eeittadminfrontend.connectors.EMACConnector
+import uk.gov.hmrc.eeittadminfrontend.controllers.{AuthController, BulkGGLoad, EeittAdminController, QueryController}
+import uk.gov.hmrc.eeittadminfrontend.controllers.{AuthController, DeltaController, EeittAdminController, QueryController}
 
 
 class ApplicationLoader extends play.api.ApplicationLoader {
@@ -246,21 +250,24 @@
 
   lazy val metricsController = new MetricsController(metrics)
 
-  val eeittUrl: String = s"${baseUrl("eeittadmin")}/eeitt"
 
-  val clientID = configuration.getString("ClientID")
   val authConnector = new FrontendAuthConnector(configuration, environment.mode)
   val securedActions = new SecuredActionsImpl(configuration, authConnector)
   val authService = new AuthService()
   val googleService = new GoogleVerifier()
+  val emacConnector = new EMACConnector()
   val authController = new AuthController(authConnector, securedActions, authService, googleService)(appConfig, messagesApi)
   val queryController = new QueryController(authConnector, messagesApi)(appConfig)
   val eeittAdminController = new EeittAdminController(authConnector, messagesApi)
   val gformController = new GformsController(authConnector)(appConfig, messagesApi)
+  val bulkGGController = new BulkGGLoad(authConnector, emacConnector)(messagesApi, appConfig)
 
+
+  val deltaController = new DeltaController(authConnector)(appConfig, messagesApi)
   lazy val assets = new _root_.controllers.Assets(httpErrorHandler)
 
-  val appRoutes = new _root_.app.Routes(httpErrorHandler, authController, gformController, queryController, eeittAdminController, assets)
+  val appRoutes = new _root_.app.Routes(httpErrorHandler, authController, gformController, queryController, bulkGGController, deltaController, eeittAdminController, assets)
+
 
   val prodRoutes = new prod.Routes(httpErrorHandler, appRoutes, healthRoutes, templateRoutes, metricsController)
 
Index: app/uk/gov/hmrc/eeittadminfrontend/models/Delta.scala
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/models/Delta.scala	(revision 84bce67b10cf37db84e69f664356e1dd4e288e07)
+++ app/uk/gov/hmrc/eeittadminfrontend/models/Deltas.scala	(revision )
@@ -16,9 +16,28 @@
 
 package uk.gov.hmrc.eeittadminfrontend.models
 
-case class Delta(value : String) {
+import play.api.libs.json.{Json, OFormat}
 
-  override def toString: String = {
-    "BOB"
-  }
+trait Deltas {
+
+  val value : String
+  val url: String
+}
+case class DeltaAgent(value: String) extends Deltas {
+  val url = "agents-delta"
 }
+
+object DeltaAgent {
+
+  implicit val format: OFormat[DeltaAgent] = Json.format[DeltaAgent]
+}
+
+case class DeltaBusiness(value: String) extends Deltas {
+
+  val url = "business-users-delta"
+}
+
+object DeltaBusiness {
+
+  implicit val format: OFormat[DeltaBusiness] = Json.format[DeltaBusiness]
+}
Index: app/uk/gov/hmrc/eeittadminfrontend/views/gg_bulkload.scala.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/uk/gov/hmrc/eeittadminfrontend/views/gg_bulkload.scala.html	(revision )
+++ app/uk/gov/hmrc/eeittadminfrontend/views/gg_bulkload.scala.html	(revision )
@@ -0,0 +1,241 @@
+@*
+ * Copyright 2017 HM Revenue & Customs
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *@
+
+@import helper._
+@import uk.gov.hmrc.eeittadminfrontend.controllers._
+@import play.api.i18n.Messages.Implicits._
+@import play.api.Play.current
+@import uk.gov.hmrc.eeittadminfrontend.connectors._
+@(knownFactsForm: Form[KnownFacts], allocateEnrolment: Form[Enrollment], listOfCredIds: Map[String, User])(implicit request : Request[_], appConfig:uk.gov.hmrc.eeittadminfrontend.AppConfig)
+
+@uk.gov.hmrc.eeittadminfrontend.views.html.main_template(title = "GG Bulk Load"){
+
+<form action="@uk.gov.hmrc.eeittadminfrontend.controllers.routes.BulkGGLoad.loadKF" class="js-form" method="POST"
+      novalidate="novalidate">
+ <h4>Load known facts</h4>
+ @CSRF.formField
+ <p>Enrolment Key:</p>
+ <p>Service:</p>
+ <fieldset class="form-field-group">
+  <input
+  type="text"
+  name="enrollmentKey.service"
+  id="service"
+  value=""
+  class="form-control form-control--block"
+  />
+  <p>Identifier:</p>
+  <input
+          type="text"
+          name="enrollmentKey.identifier"
+          id="identifier"
+          value=""
+          class="form-control form-control--block"
+  />
+<p>Value:</p>
+  <input
+          type="text"
+          name="enrollmentKey.value"
+          id="value"
+          value=""
+          class="form-control form-control--block"
+  />
+ </fieldset>
+
+
+<p>Verifier:</p>
+@helper.repeat(knownFactsForm("verifiers"), min = 3) { dataField =>
+
+
+        @helper.inputText(dataField("key"), '_label -> "Key", 'inputDivClass -> "col-sm-8", 'placeholder -> "", 'class -> "form-field-group")
+
+        @helper.inputText(dataField("value"), '_label -> "Value", 'inputDivClass -> "col-sm-8", 'placeholder -> "", 'class -> "form-field-group")
+                <div id="newField">
+                </div>
+                <br>
+            <br>
+            <br>
+            <br>
+            <br>
+
+
+
+
+
+ }
+ <input type="submit" class="button" value="Load"/>
+</form>
+
+
+<h3>Users</h3>
+
+<h4>User1</h4>
+<p>to select this user input USER1 into the user box</p>
+CredId : @listOfCredIds("USER1").credId <br/>
+UserId : @listOfCredIds("USER1").userId <br/>
+GroupId : @listOfCredIds("USER1").groupId <br/>
+
+<h4>User2</h4>
+<p>to select this user input USER2 into the user box</p>
+CredId : @listOfCredIds("USER2").credId <br/>
+UserId : @listOfCredIds("USER2").userId <br/>
+GroupId : @listOfCredIds("USER2").groupId <br/>
+
+<h4>User3</h4>
+<p>to select this user input USER3 into the user box</p>
+CredId : @listOfCredIds("USER3").credId <br/>
+UserId : @listOfCredIds("USER3").userId <br/>
+GroupId : @listOfCredIds("USER3").groupId <br/>
+
+<form action="@uk.gov.hmrc.eeittadminfrontend.controllers.routes.BulkGGLoad.assignEnrollment" class="js-form" method="POST">
+<h4>Assign Enrolment</h4>
+@CSRF.formField
+
+
+  <p>User:</p>
+  <input
+          type="text"
+          name="user"
+          id="user"
+          value=""
+          class="form-control form-control--block"
+  />
+    <p>Friendly Name:</p>
+    <input
+            type="text"
+            name="friendlyName"
+            id="friendlyName"
+            value=""
+            class="form-control form-control--block"
+    />
+<p>Service:</p>
+  <input
+          type="text"
+          name="enrolmentKey.service"
+          id="enrolmentKey.service"
+          value=""
+          class="form-control form-control--block"
+  />
+  <p>Identifier:</p>
+    <input
+          type="text"
+          name="enrolmentKey.identifier"
+          id="enrolmentKey.identifier"
+          value=""
+          class="form-control form-control--block"
+  />
+
+    <p>Value:</p>
+    <input
+          type="text"
+          name="enrolmentKey.value"
+          id="enrolmentKey.value"
+          value=""
+          class="form-control form-control--block"
+  />
+ </fieldset>
+
+
+
+ <h4>Verifier</h4>
+ @helper.repeat(allocateEnrolment("verifiers"), min = 3) { dataField =>
+
+
+   @helper.inputText(dataField("key"), '_label -> "Key", 'inputDivClass -> "col-sm-8", 'placeholder -> "", 'class -> "form-field-group")
+
+   @helper.inputText(dataField("value"), '_label -> "Value", 'inputDivClass -> "col-sm-8", 'placeholder -> "", 'class -> "form-field-group")
+ <div id="Field">
+ </div>
+ <br>
+ <br>
+ <br>
+ <br>
+ <br>
+
+
+
+
+ }
+
+ <input type="submit" class="button" value="Assign"/>
+</form>
+
+
+<h3>Users</h3>
+
+<h4>User1</h4>
+<p>to select this user input USER1 into the user box</p>
+CredId : @listOfCredIds("USER1").credId <br/>
+UserId : @listOfCredIds("USER1").userId <br/>
+GroupId : @listOfCredIds("USER1").groupId <br/>
+
+<h4>User2</h4>
+<p>to select this user input USER2 into the user box</p>
+CredId : @listOfCredIds("USER2").credId <br/>
+UserId : @listOfCredIds("USER2").userId <br/>
+GroupId : @listOfCredIds("USER2").groupId <br/>
+
+<h4>User3</h4>
+<p>to select this user input USER3 into the user box</p>
+CredId : @listOfCredIds("USER3").credId <br/>
+UserId : @listOfCredIds("USER3").userId <br/>
+GroupId : @listOfCredIds("USER3").groupId <br/>
+
+<form action="@uk.gov.hmrc.eeittadminfrontend.controllers.routes.BulkGGLoad.deleteEndPoint" class="js-form" method="POST"
+      novalidate="novalidate">
+    <h4>DELETE </h4>
+    @CSRF.formField
+    <p>User:</p>
+    <input
+            type="text"
+            name="user"
+            id="delete.user"
+            value=""
+            class="form-control form-control--block"
+    />
+    <p>Enrolment Key:</p>
+    <p>Service:</p>
+    <fieldset class="form-field-group">
+
+        <input
+                type="text"
+                name="enrollmentKey.service"
+                id="delete.service"
+                value=""
+                class="form-control form-control--block"
+        />
+        <p>Identifier:</p>
+        <input
+                type="text"
+                name="enrollmentKey.identifier"
+                id="delete.identifier"
+                value=""
+                class="form-control form-control--block"
+        />
+        <p>Value:</p>
+        <input
+                type="text"
+                name="enrollmentKey.value"
+                id="delete.value"
+                value=""
+                class="form-control form-control--block"
+        />
+    </fieldset>
+
+    <input type="submit" class="button" value="DELETE"/>
+</form>
+
+}
\ No newline at end of file
